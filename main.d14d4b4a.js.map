{"version":3,"sources":["textTerminal.js","template.js","../../package.json","defaultCommands.js","cloneCommandEl.js","js/game.js","js/main.js"],"names":["TextTerminal","prompt","separator","module","exports","name","version","description","repository","scripts","clean","start","build","lint","main","author","license","devDependencies","prettier","sass","clear","terminal","output","package","el","line","cloneNode","input","querySelector","autofocus","readOnly","insertAdjacentHTML","value","parentNode","removeChild","classList","add","configProps","event","commandInput","dom","trim","keyCode","split","command","parameters","Object","history","push","localStorage","JSON","stringify","historyCursor","length","appendChild","keys","commands","includes","callback","focus","stopPropagation","preventDefault","remove","containerId","theme","welcome","containerEl","document","getElementById","Error","assign","defaultCommands","parse","createDom","addListeners","addEventListener","setTimeout","scrollIntoView","window","onKeyUp","onKeyDown","innerHTML","resetCommand","container","game","intro","player","block","bag","powers","blockHistory","help","look","use","take","north","east","south","west","items","key","torch","blocks","entrance","state","states","default","actions","updateExitState","removeItemFromBag","exits","closed","removeItemFromBlock","addItemToBag","removeActionFromBlock","removeBagState","updateBlockState","dim","completeQuest","TextQuest","term","indent","divider","logo","stats","startTime","endTime","commandsEntered","Date","getTime","track","getBlockState","blockId","hasOwnProperty","bagState","bagContainsItem","getBlock","getBlockIntro","getPowerList","playerPowers","powerList","forEach","power","getBlockName","getBlockAction","action","toMinsAndSecs","mills","minutes","Math","floor","seconds","toFixed","getStats","playerPowersCount","timeTaken","Array","isArray","Set","item","getBagList","bagList","getExitState","exit","getExists","getExitList","exitList","exitId","existIsAvailable","isPowerKnown","bagContents","move","direction","currentBlock","newBlock","processActions","blockAction","i","funcName","func","eval","style","display","itemArray","itemIndex","indexOf","splice","blockState","exitUpdateArray","newPowerUnlocked","setTerm","instance","type","gtag","search_term","bumpCommandsEntered","init","tq","inst","e","inputCommands","firstCommand","commandsString","join","prefix","body","location","hostname","readyState","documentElement","doScroll"],"mappings":"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","file":"main.d14d4b4a.js","sourceRoot":"../src","sourcesContent":["import template from \"./template\";\nimport defaultCommands from \"./defaultCommands\";\nimport cloneCommand from \"./cloneCommandEl\";\n\nclass TextTerminal {\n  #id = \"TextTerminal\";\n  dom = {};\n  commands = {};\n  history = [];\n  historyCursor = 0;\n  prompt;\n  separator;\n  theme;\n  welcome;\n\n  constructor(configProps = {}) {\n    const {\n      containerId = \"text-terminal\",\n      commands = {},\n      prompt = \"\",\n      theme = \"dark\",\n      welcome = \"Welcome!\",\n      separator = \":\",\n    } = configProps;\n\n    const containerEl = document.getElementById(containerId);\n\n    if (!containerEl) {\n      throw Error(`Container #${containerId} does not exist!`);\n    }\n\n    this.commands = Object.assign({}, commands, defaultCommands);\n    this.history = localStorage[this.#id]\n      ? JSON.parse(localStorage[this.#id])\n      : [];\n    this.historyCursor = this.history.length;\n    this.prompt = prompt;\n    this.separator = separator;\n    this.theme = theme;\n    this.welcome = welcome;\n\n    this.createDom(containerEl);\n    this.addListeners();\n\n    if (this.welcome) this.output(this.welcome);\n  }\n\n  addListeners() {\n    this.dom.output.addEventListener(\n      \"DOMSubtreeModified\",\n      () => {\n        setTimeout(() => this.dom.input.scrollIntoView(), 10);\n      },\n      false\n    );\n\n    if (window) {\n      window.addEventListener(\"click\", () => this.dom.input.focus(), false);\n    }\n\n    this.dom.output.addEventListener(\n      \"click\",\n      (event) => event.stopPropagation(),\n      false\n    );\n\n    this.dom.command.addEventListener(\n      \"click\",\n      () => this.dom.input.focus(),\n      false\n    );\n\n    this.dom.input.addEventListener(\"keyup\", this.onKeyUp, false);\n    this.dom.input.addEventListener(\"keydown\", this.onKeyDown, false);\n  }\n\n  clear() {\n    this.dom.output.innerHTML = \"\";\n    this.resetCommand();\n  }\n\n  createDom(containerEl) {\n    containerEl.classList.add(this.#id, this.theme);\n    containerEl.insertAdjacentHTML(\n      \"beforeEnd\",\n      template(this.prompt, this.separator)\n    );\n\n    this.dom = {\n      container: containerEl.querySelector(\".container\"),\n      output: containerEl.querySelector(\"output\"),\n      command: containerEl.querySelector(\".command\"),\n      input: containerEl.querySelector(\".command .input\"),\n      prompt: containerEl.querySelector(\".command .prompt\"),\n    };\n  }\n\n  onKeyDown = (event) => {\n    const commandInput = this.dom.input.value.trim();\n\n    if (event.keyCode !== 13 || !commandInput) {\n      return;\n    }\n\n    const [command, ...parameters] = commandInput.split(\" \");\n\n    // Add commands to history\n    this.history.push(commandInput);\n    localStorage[this.#id] = JSON.stringify(this.history);\n    this.historyCursor = this.history.length;\n\n    // Clone command as a new output line\n    this.dom.output.appendChild(cloneCommand(this.dom.command));\n\n    this.dom.input.value = \"\";\n\n    // Dispatch command\n    if (Object.keys(this.commands).includes(command)) {\n      const callback = this.commands[command];\n      if (callback) {\n        callback(this, parameters);\n      }\n    } else {\n      this.output(`<b>${command}</b>: command not found.`);\n    }\n  };\n\n  onKeyUp = (event) => {\n    this.dom.input.focus();\n    event.stopPropagation();\n    event.preventDefault();\n\n    // ESC\n    if (event.keyCode === 27) {\n      this.dom.input.value = \"\";\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    if (event.keyCode === 38 || event.keyCode === 40) {\n      // UP key\n      if (event.keyCode === 38 && this.historyCursor > 0) {\n        this.historyCursor -= 1;\n      }\n\n      // DOWN key\n      if (\n        event.keyCode === 40 &&\n        this.historyCursor < this.history.length - 1\n      ) {\n        this.historyCursor -= 1;\n      }\n\n      if (this.history[this.historyCursor]) {\n        this.dom.input.value = this.history[this.historyCursor];\n      }\n    }\n  };\n\n  output(command = \"&nbsp;\") {\n    this.dom.output.insertAdjacentHTML(\"beforeEnd\", `<span>${command}</span>`);\n    this.resetCommand();\n  }\n\n  resetCommand = () => {\n    this.dom.input.value = \"\";\n    this.dom.command.classList.remove(\"input\");\n  };\n}\n\nif (window) {\n  window.TextTerminal = TextTerminal;\n}\n\nexport default TextTerminal;\n","export default (prompt, separator) => `\n  <div class=\"container\">\n    <output></output>\n    <div class=\"command\">\n      <div class=\"prompt\">${prompt}${separator}</div>\n      <input class=\"input\" spellcheck=\"false\" autocapitalize=\"off\" autofocus />\n    </div>\n  </div>\n`;\n","module.exports={name:\"text-terminal\",version:\"0.1.1\",description:\"A simple, extendable terminal interface for the web.\",repository:\"https://github.com/desholmes/text-terminal\",scripts:{clean:\"rm -rf ./dist/* \",start:\"parcel ./src/index.html\",build:\"npm run clean && parcel build ./src/scss/main.scss --out-file text-terminal.css  && parcel build ./src/modules/textTerminal.js --out-file text-terminal.js\",lint:\"prettier --check .\",\"lint-fix\":\"prettier --write .\"},main:\"dist/text-terminal.js\",author:\"Des Holmes https://github.com/desholmes\",license:\"MIT\",devDependencies:{\"parcel-bundler\":\"^1.12.4\",prettier:\"2.1.2\",sass:\"^1.28.0\"}};","import package from \"../../package.json\";\n\nexport default {\n  clear: (terminal) => terminal.clear(),\n\n  version: (terminal) => terminal.output(`Text Terminal v${package.version}`),\n};\n","export default (el) => {\n  const line = el.cloneNode(true);\n  const input = line.querySelector(\".input\");\n\n  input.autofocus = false;\n  input.readOnly = true;\n  input.insertAdjacentHTML(\"beforebegin\", input.value);\n  input.parentNode.removeChild(input);\n  line.classList.add(\"line\");\n\n  return line;\n};\n","const game = {\n  game: {\n    name: \"The Sleepy Traveller\",\n    version: 1.2,\n    description: \"Use commands to help the sleepy traveller escape\",\n    author: '<a href=\"https://github.com/desholmes\">Des Holmes</a>',\n    intro:\n      '<p>And so it begins...</p><p>Blink, blink, yawn: You slowly wake up.</p><p>\"Where am I?!?, maybe I should <b>look</b> around.\"</p>',\n  },\n  player: {\n    name: \"Sleepy traveller\",\n    block: \"entrance\",\n    bag: null,\n    powers: null,\n    blockHistory: null,\n  },\n  powers: {\n    help: { description: \"help: Lists your powers and any hints.\" },\n    look: {\n      description: \"look: Use `look` for a description of your surroundings.\",\n    },\n    bag: { description: \"bag: view the contents of your `bag`.\" },\n    use: { description: \"use: `use` an item from your `bag`.\" },\n    powers: { description: \"powers: List the powers you have unlocked.\" },\n    take: {\n      description: \"take: `take` an item from a room and put it in your `bag`\",\n    },\n    north: { description: \"north: travel `north` from your current location.\" },\n    east: { description: \"east: travel `north` from your current location.\" },\n    south: { description: \"south: travel `south` from your current location.\" },\n    west: { description: \"west: travel `west` from your current location.\" },\n  },\n  items: {\n    key: {\n      description:\n        \"A small brass key with a decorative, red ribbon tied through it.\",\n    },\n    torch: {\n      description: \"A bright metal torch with a strong glowing yellow flame.\",\n    },\n  },\n  blocks: {\n    entrance: {\n      state: \"default\",\n      states: {\n        default: {\n          name: \"Cave entrance\",\n          description:\n            \"You find yourself in a damp entrance to a cave. You can't remember how you got here, but you know you must get out. The exit to the south is blocked by thick brambles.\",\n          items: [\"key\"],\n          actions: {\n            \"use key\": {\n              description:\n                \"You put the key into the lock and turn the handle. The large oak door slowly opens inwards...\",\n              bag: \"key\",\n              actions: [\n                { updateExitState: [\"north\", \"open\"] },\n                { removeItemFromBag: [\"key\"] },\n              ],\n            },\n          },\n          exits: {\n            north: {\n              block: \"grand-hall\",\n              state: \"closed\",\n              states: {\n                closed: {\n                  description:\n                    \"A large, locked, oak door stands before you. There is a keyhole, but it's too small to peep through.\",\n                },\n              },\n            },\n            west: { block: \"well-lit-tunnel\", state: \"open\" },\n            east: { block: \"dark-tunnel\", state: \"open\" },\n          },\n        },\n      },\n    },\n    \"dark-tunnel\": {\n      state: \"default\",\n      \"bag-state\": \"torch\",\n      states: {\n        default: {\n          name: \"Dark tunnel\",\n          description:\n            \"You're standing in the pitch black. The space doesn't feel very big and there's a funny smell.\",\n          exits: { west: { block: \"entrance\", state: \"open\" } },\n        },\n        \"torch-no-key\": {\n          name: \"Dim tunnel\",\n          description:\n            \"You're standing in a torch lit room. It's small and smelly with mouldy green walls.\",\n          exits: { west: { block: \"entrance\", state: \"open\" } },\n        },\n        torch: {\n          name: \"Dim tunnel\",\n          description:\n            \"You're standing in a torch lit room. It's small and smelly with mouldy green walls. You can see a small key on the floor.\",\n          items: [\"key\"],\n          actions: {\n            \"take key\": {\n              actions: [\n                { removeItemFromBlock: [\"key\"] },\n                { addItemToBag: [\"key\"] },\n                { removeActionFromBlock: [\"take key\"] },\n                { removeBagState: null },\n                { updateBlockState: [\"torch-no-key\"] },\n              ],\n            },\n          },\n          exits: { west: { block: \"entrance\", state: \"open\" } },\n        },\n      },\n    },\n    \"well-lit-tunnel\": {\n      state: \"default\",\n      states: {\n        default: {\n          name: \"Well lit tunnel\",\n          description:\n            \"You're standing in a well lit room, there are two torches on the wall. One looks to have been lit recently.\",\n          items: [\"torch\"],\n          actions: {\n            \"take torch\": {\n              actions: [\n                { removeItemFromBlock: [\"torch\"] },\n                { addItemToBag: [\"torch\"] },\n                { removeActionFromBlock: [\"take torch\"] },\n                { updateBlockState: [\"dim\"] },\n              ],\n            },\n          },\n          exits: { east: { block: \"entrance\", state: \"open\" } },\n        },\n        dim: {\n          name: \"Dimly lit tunnel\",\n          description:\n            \"You're standing in dimly lit room, there's a single torch fixed firmly to the wall, and sooty marks on the wall opposite where a torch once was.\",\n          exits: { east: { block: \"entrance\", state: \"open\" } },\n        },\n      },\n    },\n    \"grand-hall\": {\n      state: \"default\",\n      states: {\n        default: {\n          name: \"Grand Hall\",\n          description:\n            '<p>You\\'re standing in a vast hall. The long, well dressed table is full of delicious-looking food. A voice from the back of the room booms:</p><h1>\"There you are my boy! Sit down, sit down. The food is getting cold.\"</h1><p>Your quest is complete!</p>',\n          \"auto-actions\": [{ completeQuest: null }],\n        },\n      },\n    },\n  },\n};\n\nexport default game;\n","import TextTerminal from \"text-terminal\";\nimport \"text-terminal/dist/text-terminal.css\";\n\nimport game from \"./game\";\n\n/****\n _             _                          _   \n| |_ _____   _| |_   __ _ _   _  ___  ___| |_ \n| __/ _ \\ \\/ / __|  / _` | | | |/ _ \\/ __| __|\n| ||  __/>  <| |_  | (_| | |_| |  __/\\__ \\ |_ \n \\__\\___/_/\\_\\\\__|  \\__, |\\__,_|\\___||___/\\__|\n                       |_|\n\n                       Unlock your imagination.\n***/\n\nconst TextQuest = () => {\n  let term;\n  const indent = \"--->\";\n  const divider = \"<p>------------------</p>\";\n  const logo =\n    '<pre class=\"logo\">*================================================================*<br>\\\n==================================================================<br>\\\n==================================================================<br>\\\n==================================================================<br>\\\n===  ==================  ====================================  ===<br>\\\n===  ==================  ====================================  ===<br>\\\n==    ===   ===  =  ==    ========    ==  =  ===   ====   ==    ==<br>\\\n===  ===  =  ==  =  ===  ========  =  ==  =  ==  =  ==  =  ==  ===<br>\\\n===  ===     ===   ====  ========  =  ==  =  ==     ===  ====  ===<br>\\\n===  ===  ======   ====  =========    ==  =  ==  =======  ===  ===<br>\\\n===  ===  =  ==  =  ===  ===========  ==  =  ==  =  ==  =  ==  ===<br>\\\n===   ===   ===  =  ===   ==========  ===    ===   ====   ====  ==<br>\\\n====================================  = ==========================<br>\\\n=====================================  ===========================<br>\\\n==================================================================<br>\\\n========================================*\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"*=<br>\\\n=======================================* Unlock your imagination *<br>\\\n*======================================*-------------------------*<br></pre>';\n  const welcome = `<h1>Welcome to</h1>\n  ${logo}\n  ${divider}\n  <p>(Type commands to complete your quest)</p>`;\n  const stats = {\n    startTime: 0,\n    endTime: 0,\n    commandsEntered: 0,\n  };\n\n  const start = () => {\n    stats.startTime = new Date().getTime();\n    term.output(welcome);\n    term.output(\n      `<h1>Quest: ${game.game.name} (v${game.game.version} by ${game.game.author})</h1>`\n    );\n    term.output(divider);\n    term.output(game.game.intro);\n    track(\"search\", \"questWelcome\");\n    game.player.blockHistory = [];\n    game.player.blockHistory.push(game.player.block);\n  };\n\n  /**\n      Getters\n  */\n  const getBlockState = (blockId) => {\n    const block = game.blocks[blockId];\n    if (game.blocks[blockId].hasOwnProperty(\"bag-state\")) {\n      const bagState = game.blocks[blockId][\"bag-state\"];\n      if (bagContainsItem(bagState)) {\n        return bagState;\n      }\n    }\n    return block.state;\n  };\n\n  const getBlock = (state, blockId) => {\n    return game.blocks[blockId].states[state];\n  };\n\n  const getBlockIntro = (blockId) => {\n    const block = getBlock(getBlockState(blockId), blockId);\n    return `<h1>${block.name}</h1>\n            <p>${block.description}</p>`;\n  };\n\n  const getPowerList = () => {\n    const playerPowers = game.player.powers;\n    let powerList = \"Powers:<br>\";\n\n    if (playerPowers) {\n      playerPowers.forEach((power) => {\n        powerList += `${indent} ${game.powers[power].description}<br>`;\n      });\n    } else {\n      powerList += \"You have no powers :( Try typing a command\";\n    }\n    return `<p>${powerList}<p>`;\n  };\n\n  const getBlockName = (blockId) => {\n    const block = getBlock(getBlockState(blockId), blockId);\n    return block.name;\n  };\n\n  const getBlockAction = (action) => {\n    const block = getBlock(getBlockState(game.player.block), game.player.block);\n    if (!block.hasOwnProperty(\"actions\")) {\n      return false;\n    }\n    if (block.actions.hasOwnProperty(action)) {\n      return block.actions[action];\n    } else {\n      return false;\n    }\n  };\n\n  /**\n      Helpers\n   */\n\n  const toMinsAndSecs = (mills) => {\n    const minutes = Math.floor(mills / 60000);\n    const seconds = ((mills % 60000) / 1000).toFixed(0);\n    return seconds == 60\n      ? minutes + 1 + \"m 00s\"\n      : minutes + \"m \" + (seconds < 10 ? \"0\" : \"\") + seconds + \"s\";\n  };\n\n  const getStats = () => {\n    let playerPowersCount, timeTaken;\n\n    const endTime = new Date().getTime();\n    timeTaken = toMinsAndSecs(endTime - stats.startTime);\n\n    playerPowersCount =\n      game.player.powers && Array.isArray(game.player.powers)\n        ? game.player.powers.length\n        : 0;\n\n    term.output(`${divider}\n                  <h1>Game Stats</h1>\n                  ${indent} Time taken: ${timeTaken}<br>\n                  ${indent} Commands entered: ${stats.commandsEntered}<br>\n                  ${indent} Powers unlocked: ${playerPowersCount}/${\n      Object.keys(game.powers).length\n    }<br>\n                  ${indent} Blocks visited: ${\n      [...new Set(game.player.blockHistory)].length\n    }/${Object.keys(game.blocks).length}`);\n  };\n\n  const bagContainsItem = (item) => {\n    if (Array.isArray(game.player.bag)) {\n      if (game.player.bag.includes(item)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const getBagList = () => {\n    let bagList = \"Bag contents: \";\n    if (Array.isArray(game.player.bag)) {\n      if (game.player.bag.length > 0) {\n        bagList += \"<br>\";\n        game.player.bag.forEach((item) => {\n          bagList += `${indent} ${item}: ${game.items[item].description}<br>`;\n        });\n      } else {\n        bagList += \"Your bag is empty\";\n      }\n    } else {\n      bagList += \"Your bag is empty\";\n    }\n    return `<p>${bagList}<p>`;\n  };\n\n  const getExitState = (exit) => {\n    if (exit.state === \"open\") {\n      return `${getBlockName(exit.block)}`;\n    } else {\n      return exit.states[exit.state].description;\n    }\n  };\n\n  const getExists = () => {\n    const block = getBlock(getBlockState(game.player.block), game.player.block);\n    if (!block.hasOwnProperty(\"exits\")) {\n      return \"\";\n    }\n    return `<p><b>Exits:</b><br>${getExitList(game.player.block)}</p>`;\n  };\n\n  const getExitList = (blockId) => {\n    const block = getBlock(getBlockState(blockId), blockId);\n    let exitList = \"\";\n    for (const exitId in block.exits) {\n      exitList += `${indent} <b>${exitId}</b>: ${getExitState(\n        block.exits[exitId]\n      )}<br>`;\n    }\n    return exitList;\n  };\n\n  const existIsAvailable = (exitId) => {\n    const block = getBlock(getBlockState(game.player.block), game.player.block);\n    if (block.exits.hasOwnProperty(exitId)) {\n      if (block.exits[exitId].state === \"open\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n    Terminal commands\n  */\n\n  const bag = () => {\n    isPowerKnown(\"bag\");\n    const bagContents = getBagList();\n    term.output(bagContents);\n  };\n\n  const help = () => {\n    isPowerKnown(\"help\");\n    const powers = getPowerList();\n    term.output(powers);\n    const bagContents = getBagList();\n    term.output(bagContents);\n  };\n\n  const look = () => {\n    term.clear();\n    isPowerKnown(\"look\");\n    term.output(getBlockIntro(game.player.block));\n    term.output(getExists(game.player.block));\n  };\n\n  const move = (direction) => {\n    if (existIsAvailable(direction)) {\n      term.clear();\n      isPowerKnown(direction);\n\n      const currentBlock = getBlock(\n        getBlockState(game.player.block),\n        game.player.block\n      );\n      game.player.block = currentBlock.exits[direction].block;\n      term.output(getBlockIntro(game.player.block));\n      term.output(getExists(game.player.block));\n\n      const newBlock = getBlock(\n        getBlockState(game.player.block),\n        game.player.block\n      );\n\n      game.player.blockHistory.push(game.player.block);\n\n      track(\"search\", game.player.block);\n      if (newBlock.hasOwnProperty(\"auto-actions\")) {\n        processActions(newBlock[\"auto-actions\"]);\n      }\n    } else {\n      isPowerKnown(direction);\n      term.output(`There is no exit ${direction}.`);\n    }\n  };\n\n  const powers = () => {\n    isPowerKnown(\"powers\");\n    const powers = getPowerList();\n    term.output(powers);\n  };\n\n  const take = (item) => {\n    isPowerKnown(\"take\");\n    const blockAction = getBlockAction(`take ${item}`);\n    if (blockAction !== false) {\n      processActions(blockAction.actions);\n      term.output(`<p>You take the ${item}.</p>`);\n      track(\"search\", `took-${item}`);\n    } else {\n      term.output(`<p>You can't take that.</p>`);\n      track(\"search\", `cantTake-${item}`);\n    }\n  };\n\n  const use = (item) => {\n    isPowerKnown(\"use\");\n    const blockAction = getBlockAction(`use ${item}`);\n\n    if (!bagContainsItem(blockAction.bag)) {\n      term.output(`<p>You don't have ${item}.</p>`);\n      track(\"search\", `useDontHave-${item}`);\n    } else {\n      if (blockAction !== false) {\n        processActions(blockAction.actions);\n        term.output(`<p>${blockAction.description}`);\n        track(\"search\", `use-${item}`);\n      } else {\n        term.output(`<p>You can't use that.</p>`);\n        track(\"search\", `cantUse-${item}`);\n      }\n    }\n  };\n\n  const processActions = (actions) => {\n    for (let i = 0; i < actions.length; i++) {\n      const funcName = Object.keys(actions[i])[0];\n      const func = eval(funcName);\n      func(actions[i][funcName]);\n    }\n  };\n\n  /**\n      Dynamic functions called from inside game.js\n  */\n\n  const completeQuest = () => {\n    getStats();\n    const commandDom = document.querySelector(\".command\");\n    commandDom.style.display = \"none\";\n    track(\"search\", \"questComplete\");\n  };\n\n  const addItemToBag = (itemArray) => {\n    if (!Array.isArray(game.player.bag)) {\n      game.player.bag = [];\n    }\n    game.player.bag.push(itemArray[0]);\n  };\n\n  const removeItemFromBag = (item) => {\n    const itemIndex = game.player.bag.indexOf(item);\n    game.player.bag.splice(itemIndex);\n  };\n\n  const removeItemFromBlock = (item) => {\n    const blockState = getBlockState(game.player.block);\n    const itemIndex = game.blocks[game.player.block].states[\n      blockState\n    ].items.indexOf(item);\n    game.blocks[game.player.block].states[blockState].items.splice(itemIndex);\n  };\n\n  const removeActionFromBlock = (action) => {\n    const blockState = getBlockState(game.player.block);\n    delete game.blocks[game.player.block].states[blockState].actions[action];\n  };\n\n  const updateBlockState = (state) => {\n    game.blocks[game.player.block].state = state;\n  };\n\n  const updateExitState = (exitUpdateArray) => {\n    const blockState = getBlockState(game.player.block);\n    game.blocks[game.player.block].states[blockState].exits[\n      exitUpdateArray[0]\n    ].state = exitUpdateArray[1];\n  };\n\n  const removeBagState = () => {\n    const blockState = getBlockState(game.player.block);\n    delete game.blocks[game.player.block][\"bag-state\"];\n  };\n\n  const newPowerUnlocked = (power) => {\n    term.output(`<h1 class=\"power-unlocked\">New power unlocked: ${power}</h1>`);\n    term.output(divider);\n    track(\"search\", `newPowerUnlocked--${power}`);\n  };\n\n  const isPowerKnown = (power) => {\n    if (Array.isArray(game.player.powers)) {\n      if (!game.player.powers.includes(power)) {\n        newPowerUnlocked(power);\n        game.player.powers.push(power);\n      }\n    } else {\n      game.player.powers = [];\n      newPowerUnlocked(power);\n      game.player.powers.push(power);\n    }\n  };\n\n  const setTerm = (instance) => {\n    term = instance;\n  };\n\n  const track = (type, value) => {\n    if (window.gtag) {\n      if (type === \"search\") {\n        window.gtag(\"event\", \"search\", {\n          search_term: value,\n        });\n      }\n    }\n  };\n\n  const bumpCommandsEntered = () => {\n    stats.commandsEntered += 1;\n  };\n\n  return {\n    // static\n    logo: logo,\n    divider: divider,\n    // commands\n    bag: bag,\n    help: help,\n    look: look,\n    move: move,\n    powers: powers,\n    take: take,\n    use: use,\n    // getters and setters\n    setTerm: setTerm,\n    // init and utils\n    start: start,\n    track: track,\n    bumpCommandsEntered: bumpCommandsEntered,\n  };\n};\n\nconst init = () => {\n  // create instance of TextQuest\n  const tq = TextQuest();\n\n  const commands = {\n    bag: () => {\n      tq.bag();\n    },\n    clear: (terminal) => {\n      terminal.clear();\n    },\n    help: () => {\n      tq.help();\n    },\n    look: () => {\n      tq.look();\n    },\n    powers: () => {\n      tq.powers();\n    },\n    take: (inst, item) => {\n      tq.take(item);\n    },\n    use: (inst, item) => {\n      tq.use(item);\n    },\n    // Movement directions\n    north: () => {\n      tq.move(\"north\");\n    },\n    east: () => {\n      tq.move(\"east\");\n    },\n    south: () => {\n      tq.move(\"south\");\n    },\n    west: () => {\n      tq.move(\"west\");\n    },\n  };\n\n  const terminal = new TextTerminal({\n    containerId: \"terminal\",\n    prompt: \"Traveller\",\n    separator: \": \",\n    welcome: \"\",\n    commands: commands,\n  });\n\n  terminal.dom.command.addEventListener(\n    \"keydown\",\n    (e) => {\n      // up arrow\n      if (e.keyCode === 38) {\n        tq.track(\"search\", \"up-arrow\");\n        // down arrow\n      } else if (e.keyCode === 40) {\n        tq.track(\"search\", \"down-arrow\");\n        // enter\n      } else if (e.keyCode === 13) {\n        let inputCommands;\n        let firstCommand;\n        let commandsString;\n        if (terminal.dom.input.value.includes(\" \")) {\n          inputCommands = terminal.dom.input.value.split(\" \");\n          firstCommand = inputCommands[0];\n          commandsString = inputCommands.join(\"-\");\n        } else {\n          inputCommands = terminal.dom.input.value;\n          firstCommand = commandsString = inputCommands;\n        }\n        const prefix = !commands.hasOwnProperty(firstCommand)\n          ? \"commandUnknown\"\n          : \"commandKnown\";\n        tq.track(\"search\", `${prefix}--${commandsString}`);\n        // bump to commands entered stat\n        tq.bumpCommandsEntered();\n        // hide the ribbon on mobile\n        document\n          .querySelector(\".github-fork-ribbon\")\n          .classList.add(\"mobile-hide\");\n      }\n    },\n    true\n  );\n\n  tq.setTerm(terminal);\n  tq.start();\n\n  // focus on terminal input for 'whole page' clicking event\n  document.body.addEventListener(\n    \"click\",\n    () => {\n      document.querySelector(\".input\").focus();\n    },\n    true\n  );\n\n  // show the 'fork me' banner if we're not on local host\n  if (window.location.hostname !== \"localhost\") {\n    document.querySelector(\".github-fork-ribbon\").classList.remove(\"hide\");\n  }\n};\n\nif (\n  document.readyState === \"complete\" ||\n  (document.readyState !== \"loading\" && !document.documentElement.doScroll)\n) {\n  init();\n} else {\n  document.addEventListener(\"DOMContentLoaded\", init);\n}\n"]}